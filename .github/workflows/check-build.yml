name: Check for errors, clippy, format, test and build

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-test-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [macos-latest, ubuntu-latest, windows-latest, ubuntu-24.04-arm]

    steps:
      - uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2

      - name: Check for errors
        run: cargo check --all-targets --verbose
      
      - name: Run tests
        run: cargo test --verbose

      - name: Check code formatting
        run: cargo fmt --all --check --verbose

      - name: Check code with clippy
        run: cargo clippy --all-targets --verbose

      - name: Build in release mode
        run: cargo build --release --verbose

        
      - name: Set executable name variables
        id: set_vars
        shell: bash
        run: |
          SYS=$(echo "${{ runner.arch }}-${{ runner.os }}" | tr '[:upper:]' '[:lower:]' | sed "s/x64/x86_64/" | sed "s/arm64/aarch64/")
    
          echo "artifact_name=fit2gpx-${SYS}" >> "$GITHUB_OUTPUT"
    

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          # name: fit2gpx-${{ runner.os }}-${{ runner.arch }}
          name: ${{ steps.set_vars.outputs.artifact_name }}
          path: |
              target/release/fit2gpx
              target/release/fit2gpx.exe
